librashader_name='librashader'
librashader_version='0.4.5'
librashader_url='https://github.com/SnowflakePowered/librashader.git'
librashader_hash='1e0727f89de590a325766855fb1fa35c624fa6c8'
librashader_profile='release'

librashader_setup() {
  if [ ! -d "librashader" ]; then
    git clone https://github.com/SnowflakePowered/librashader.git
  else
    git -C librashader fetch
  fi
  git -C librashader reset --hard "$librashader_hash"
  
  if [[ $config == "Debug" ]]; then
    librashader_profile='debug'
  elif [[ $config == "Release" ]]; then
    librashader_profile='optimized'
  fi
}

librashader_clean() {
  echo "Todo"
}

librashader_patch() {
  echo "No patching to perform"
}

librashader_build() {
  cd librashader
  cargo +nightly run -p librashader-build-script -- --profile ${librashader_profile}
  cd ..
}

librashader_install() {
  mkdir -p ares-deps/include/librashader/
  mkdir -p ares-deps/lib/
  cp -R "build_temp_$os-$arch-$config"/librashader/include/. ares-deps/include/librashader/
  cp -R "build_temp_$os-$arch-$config"/librashader/target/${librashader_profile}/librashader.d ares-deps/lib/librashader.d
  cp -R "build_temp_$os-$arch-$config"/librashader/target/${librashader_profile}/librashader.dll ares-deps/lib/librashader.dll
  cp -R "build_temp_$os-$arch-$config"/librashader/target/${librashader_profile}/librashader.dll.exp ares-deps/lib/librashader.dll.exp
  cp -R "build_temp_$os-$arch-$config"/librashader/target/${librashader_profile}/librashader.dll.lib ares-deps/lib/librashader.dll.lib
  cp -R "build_temp_$os-$arch-$config"/librashader/target/${librashader_profile}/librashader.pdb ares-deps/lib/librashader.pdb
}
