sdl_name='SDL2'
sdl_version='2.30.8'
sdl_url='https://github.com/libsdl-org/SDL.git'
sdl_hash='79ec168f3c1e2fe27335cb8886439f7ef676fb49'
SDLARGS=()

## Build Steps
sdl_setup() {
  if [ ! -d "SDL" ]; then
    git clone https://github.com/libsdl-org/SDL.git
  else
    git -C SDL fetch
  fi
  git -C SDL reset --hard "$sdl_hash"
}

sdl_clean() {
  echo "Todo"
}

sdl_config() {
  if [[ "$config" == "RelWithDebInfo" ]]; then
    CFLAGS='-g'
  elif [[ "$config" == "Debug" ]]; then
    CFLAGS='-O0 -g'
  fi
}

sdl_patch() {
  echo "No patching to perform"
}

sdl_build() {
  SDLARGS=()
  SDLARGS+=("-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64;")

  cd SDL
  
  xcodebuild build -project ./Xcode/SDL/SDL.xcodeproj \
                   -scheme "Shared Library" \
                   archive \
                   -configuration $config \
                   DEBUG_INFORMATION_FORMAT="dwarf-with-dsym" \
                   -archivePath "$SCRIPT_DIR/build_temp/SDL/build" \
                   ARCHS="x86_64 arm64" \
                   ONLY_ACTIVE_ARCH=FALSE \
                   2>&1 | xcbeautify --renderer github-actions
  cd ..
}

sdl_install() {
  ditto build_temp/SDL/build.xcarchive/Products/@rpath/libSDL2.dylib ares-deps/lib/libSDL2.dylib
  ditto build_temp/SDL/build.xcarchive/dSYMs/libSDL2.dylib.dSYM ares-deps/lib/libSDL2.dylib.dSYM
  mkdir -p ares-deps/include/SDL2
  ditto build_temp/SDL/build.xcarchive/Products/usr/local/include ares-deps/include/SDL2
  ditto build_temp/SDL/LICENSE.txt ares-deps/licenses/SDL2/LICENSE.txt
}



